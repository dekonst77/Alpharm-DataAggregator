//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAggregator.Web.RetailFileInfoService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RetailFileInfoService.IFileInfoService")]
    public interface IFileInfoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileInfoService/DeleteFileInfo", ReplyAction="http://tempuri.org/IFileInfoService/DeleteFileInfoResponse")]
        void DeleteFileInfo(long fileInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileInfoService/DeleteFileInfo", ReplyAction="http://tempuri.org/IFileInfoService/DeleteFileInfoResponse")]
        System.Threading.Tasks.Task DeleteFileInfoAsync(long fileInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileInfoService/ReloadFileInfo", ReplyAction="http://tempuri.org/IFileInfoService/ReloadFileInfoResponse")]
        void ReloadFileInfo(long fileInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileInfoService/ReloadFileInfo", ReplyAction="http://tempuri.org/IFileInfoService/ReloadFileInfoResponse")]
        System.Threading.Tasks.Task ReloadFileInfoAsync(long fileInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileInfoService/UpdateFileInfo", ReplyAction="http://tempuri.org/IFileInfoService/UpdateFileInfoResponse")]
        void UpdateFileInfo(long sourceId, int year, int month);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileInfoService/UpdateFileInfo", ReplyAction="http://tempuri.org/IFileInfoService/UpdateFileInfoResponse")]
        System.Threading.Tasks.Task UpdateFileInfoAsync(long sourceId, int year, int month);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileInfoServiceChannel : DataAggregator.Web.RetailFileInfoService.IFileInfoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileInfoServiceClient : System.ServiceModel.ClientBase<DataAggregator.Web.RetailFileInfoService.IFileInfoService>, DataAggregator.Web.RetailFileInfoService.IFileInfoService {
        
        public FileInfoServiceClient() {
        }
        
        public FileInfoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileInfoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileInfoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileInfoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DeleteFileInfo(long fileInfoId) {
            base.Channel.DeleteFileInfo(fileInfoId);
        }
        
        public System.Threading.Tasks.Task DeleteFileInfoAsync(long fileInfoId) {
            return base.Channel.DeleteFileInfoAsync(fileInfoId);
        }
        
        public void ReloadFileInfo(long fileInfoId) {
            base.Channel.ReloadFileInfo(fileInfoId);
        }
        
        public System.Threading.Tasks.Task ReloadFileInfoAsync(long fileInfoId) {
            return base.Channel.ReloadFileInfoAsync(fileInfoId);
        }
        
        public void UpdateFileInfo(long sourceId, int year, int month) {
            base.Channel.UpdateFileInfo(sourceId, year, month);
        }
        
        public System.Threading.Tasks.Task UpdateFileInfoAsync(long sourceId, int year, int month) {
            return base.Channel.UpdateFileInfoAsync(sourceId, year, month);
        }
    }
}
